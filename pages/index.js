import Head from 'next/head'
import { TabGroup } from '@statikly/funk'
import styles from '../styles/Home.module.css'
import Link from 'next/link'
import React from 'react'
import { format } from "date-fns";
import { client } from '../lib/apollo';
import { useQuery, gql } from "@apollo/client";
//testing
export default function Home({ posts, reviews, topstory, trending }) {
  const [openTab, setOpenTab] = React.useState(1);
  return (
    <div >
      <Head>
        <title>Create Next App</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <section className="px-2   sm:px-4 pt-20  dark:bg-gray-800  dark:text-gray-100 ">
        <div className="container dark:bg-gray-800">
          <div className="grid lg:grid-cols-2 mx-auto gap-y-6 md:gap-10">
            <div className="box-border block" style={{ zIndex: 0 }}>
              <div className={openTab === 1 ? "block" : "hidden"} id="link1">
                {posts.slice(0, 1).map((post, index) => {
                  console.log(post);
                  var olddate = new Date(post['date']);
                  var today = format(olddate, "MMMM do, yyyy");
                  return (<Link href={`/blog${post['uri']}`}>
                    <div className="flex flex-col md:my-20">
                      <figure className=" relative   bg-center bg-no-repeat bg-cover dark:bg-coolGray-500  min-h-96">
                        <a href="" className="block">
                          <img
                            className='w-[600px] min-[600px]'
                            src={post.featuredImage.node.sourceUrl}
                            alt="postimage"
                            loading="lazy"
                          />
                        </a>
                        <span className="absolute bg-blue-700 text-white px-3 py-1 text-xs font-bold uppercase   top-6  dark:text-gray-100">
                          <a href="">{post['categories']['nodes'][0]['name']}</a>
                        </span>
                      </figure>
                      <a
                        href=""
                        className="text-black px-3 py-1 text-sm md:text-xl font-semibold uppercase top-6  dark:text-gray-100 hover:underline"
                      >
                        <div>
                          {post['title']}
                        </div>
                      </a>
                      <div className="flex space-x-4 font-xs text-gray-500">
                        <a href="" className="hover:text-red-500 duration-500">
                          By Ashley Graham
                        </a>

                        <span>{today}</span>
                        <a
                          href=""
                          className="flex justify-between cursor-pointer hover:text-red-500 duration-500"
                        >
                          <svg
                            xmlns="http://www.w3.org/2000/svg"
                            className="h-4 w-4 mx-1 my-1"
                            viewBox="0 0 20 20"
                            stroke="currentColor"
                          >
                            <path
                              fill=""
                              d="M18.737,9.691h-5.462c-0.279,0-0.527,0.174-0.619,0.437l-1.444,4.104L8.984,3.195c-0.059-0.29-0.307-0.506-0.603-0.523C8.09,2.657,7.814,2.838,7.721,3.12L5.568,9.668H1.244c-0.36,0-0.655,0.291-0.655,0.655c0,0.36,0.294,0.655,0.655,0.655h4.8c0.281,0,0.532-0.182,0.621-0.45l1.526-4.645l2.207,10.938c0.059,0.289,0.304,0.502,0.595,0.524c0.016,0,0.031,0,0.046,0c0.276,0,0.524-0.174,0.619-0.437L13.738,11h4.999c0.363,0,0.655-0.294,0.655-0.655C19.392,9.982,19.1,9.691,18.737,9.691z"
                            />
                          </svg>
                          5k Views
                        </a>
                        <a
                          href="#"
                          className="flex justify-between cursor-pointer hover:text-red-500 duration-500"
                        >
                          <svg
                            xmlns="http://www.w3.org/2000/svg"
                            className="h-4 w-4 mx-1 my-1"
                            fill="none"
                            viewBox="0 0 24 24"
                            stroke="currentColor"
                          >
                            <path
                              strokeLinecap="round"
                              strokeLinejoin="round"
                              strokeWidth={2}
                              d="M8.684 13.342C8.886 12.938 9 12.482 9 12c0-.482-.114-.938-.316-1.342m0 2.684a3 3 0 110-2.684m0 2.684l6.632 3.316m-6.632-6l6.632-3.316m0 0a3 3 0 105.367-2.684 3 3 0 00-5.367 2.684zm0 9.316a3 3 0 105.368 2.684 3 3 0 00-5.368-2.684z"
                            />
                          </svg>
                          230 Shares
                        </a>
                      </div>
                    </div>
                  </Link>)
                })}
              </div>
              <div className={openTab === 2 ? "block" : "hidden"} id="link1">
                {reviews.slice(0, 1).map((post, index) => {
                  var olddate = new Date(post['date']);
                  var today = format(olddate, "MMMM do, yyyy");
                  return (<Link href={`/blog${post['uri']}`}>
                    <div className="flex flex-col md:my-20">
                      <figure className=" relative   bg-center bg-no-repeat bg-cover dark:bg-coolGray-500  min-h-96">
                        <a href="" className="block">
                          <img
                            className='w-[600px] min-[600px]'
                            src={post.featuredImage.node.sourceUrl}
                            alt="postimage"
                            loading="lazy"
                          />
                        </a>
                        <span className="absolute bg-blue-700 text-white px-3 py-1 text-xs font-bold uppercase   top-6  dark:text-gray-100">
                          <a href="">Technology</a>
                        </span>
                      </figure>
                      <a
                        href=""
                        className="text-black px-3 py-1 text-2xl font-bold uppercase top-6  dark:text-gray-100 hover:underline"
                      >
                        <h2>
                          {post['title']}
                        </h2>
                      </a>
                      <div className="flex space-x-4 font-xs text-gray-500">
                        <a href="" className="hover:text-red-500 duration-500">
                          By Ashley Graham
                        </a>
                        <span>{today}</span>
                        <a
                          href=""
                          className="flex justify-between cursor-pointer hover:text-red-500 duration-500"
                        >
                          <svg
                            xmlns="http://www.w3.org/2000/svg"
                            className="h-4 w-4 mx-1 my-1"
                            viewBox="0 0 20 20"
                            stroke="currentColor"
                          >
                            <path
                              fill=""
                              d="M18.737,9.691h-5.462c-0.279,0-0.527,0.174-0.619,0.437l-1.444,4.104L8.984,3.195c-0.059-0.29-0.307-0.506-0.603-0.523C8.09,2.657,7.814,2.838,7.721,3.12L5.568,9.668H1.244c-0.36,0-0.655,0.291-0.655,0.655c0,0.36,0.294,0.655,0.655,0.655h4.8c0.281,0,0.532-0.182,0.621-0.45l1.526-4.645l2.207,10.938c0.059,0.289,0.304,0.502,0.595,0.524c0.016,0,0.031,0,0.046,0c0.276,0,0.524-0.174,0.619-0.437L13.738,11h4.999c0.363,0,0.655-0.294,0.655-0.655C19.392,9.982,19.1,9.691,18.737,9.691z"
                            />
                          </svg>
                          5k Views
                        </a>
                        <a
                          href="#"
                          className="flex justify-between cursor-pointer hover:text-red-500 duration-500"
                        >
                          <svg
                            xmlns="http://www.w3.org/2000/svg"
                            className="h-4 w-4 mx-1 my-1"
                            fill="none"
                            viewBox="0 0 24 24"
                            stroke="currentColor"
                          >
                            <path
                              strokeLinecap="round"
                              strokeLinejoin="round"
                              strokeWidth={2}
                              d="M8.684 13.342C8.886 12.938 9 12.482 9 12c0-.482-.114-.938-.316-1.342m0 2.684a3 3 0 110-2.684m0 2.684l6.632 3.316m-6.632-6l6.632-3.316m0 0a3 3 0 105.367-2.684 3 3 0 00-5.367 2.684zm0 9.316a3 3 0 105.368 2.684 3 3 0 00-5.368-2.684z"
                            />
                          </svg>
                          230 Shares
                        </a>
                      </div>
                    </div>
                  </Link>)
                })}
              </div>
              <div className={openTab === 3 ? "block" : "hidden"} id="link1">
                {topstory.slice(0, 1).map((post, index) => {
                  var olddate = new Date(post['date']);
                  var today = format(olddate, "MMMM do, yyyy");
                  return (<Link href={`/blog${post['uri']}`}>
                    <div className="flex flex-col md:my-20">
                      <figure className=" relative   bg-center bg-no-repeat bg-cover dark:bg-coolGray-500  min-h-96">
                        <a href="" className="block">
                          <img
                            className='w-[600px] min-[600px]'
                            src={post.featuredImage.node.sourceUrl}
                            alt="postimage"
                            loading="lazy"
                          />
                        </a>
                        <span className="absolute bg-blue-700 text-white px-3 py-1 text-xs font-bold uppercase   top-6  dark:text-gray-100">
                          <a href="">Technology</a>
                        </span>
                      </figure>
                      <a
                        href=""
                        className="text-black px-3 py-1 text-2xl font-bold uppercase top-6  dark:text-gray-100 hover:underline"
                      >
                        <h2>
                          {post['title']}
                        </h2>
                      </a>
                      <div className="flex space-x-4 font-xs text-gray-500">
                        <a href="" className="hover:text-red-500 duration-500">
                          By Ashley Graham
                        </a>
                        <span>{today}</span>
                        <a
                          href=""
                          className="flex justify-between cursor-pointer hover:text-red-500 duration-500"
                        >
                          <svg
                            xmlns="http://www.w3.org/2000/svg"
                            className="h-4 w-4 mx-1 my-1"
                            viewBox="0 0 20 20"
                            stroke="currentColor"
                          >
                            <path
                              fill=""
                              d="M18.737,9.691h-5.462c-0.279,0-0.527,0.174-0.619,0.437l-1.444,4.104L8.984,3.195c-0.059-0.29-0.307-0.506-0.603-0.523C8.09,2.657,7.814,2.838,7.721,3.12L5.568,9.668H1.244c-0.36,0-0.655,0.291-0.655,0.655c0,0.36,0.294,0.655,0.655,0.655h4.8c0.281,0,0.532-0.182,0.621-0.45l1.526-4.645l2.207,10.938c0.059,0.289,0.304,0.502,0.595,0.524c0.016,0,0.031,0,0.046,0c0.276,0,0.524-0.174,0.619-0.437L13.738,11h4.999c0.363,0,0.655-0.294,0.655-0.655C19.392,9.982,19.1,9.691,18.737,9.691z"
                            />
                          </svg>
                          5k Views
                        </a>
                        <a
                          href="#"
                          className="flex justify-between cursor-pointer hover:text-red-500 duration-500"
                        >
                          <svg
                            xmlns="http://www.w3.org/2000/svg"
                            className="h-4 w-4 mx-1 my-1"
                            fill="none"
                            viewBox="0 0 24 24"
                            stroke="currentColor"
                          >
                            <path
                              strokeLinecap="round"
                              strokeLinejoin="round"
                              strokeWidth={2}
                              d="M8.684 13.342C8.886 12.938 9 12.482 9 12c0-.482-.114-.938-.316-1.342m0 2.684a3 3 0 110-2.684m0 2.684l6.632 3.316m-6.632-6l6.632-3.316m0 0a3 3 0 105.367-2.684 3 3 0 00-5.367 2.684zm0 9.316a3 3 0 105.368 2.684 3 3 0 00-5.368-2.684z"
                            />
                          </svg>
                          230 Shares
                        </a>
                      </div>
                    </div>
                  </Link>)
                })}
              </div>
            </div>
            <div className=" pt-2  ">
              <div className="mx-4 ">
                <ul
                  className="flex space-x-20 mb-0 list-none flex-wrap pt-3 pb-4 flex-row"
                  role="tablist"
                >
                  <li
                    className={
                      "pb-2 cursor-pointer text-xs font-bold uppercase  duration-150   block leading-normal " +
                      (openTab === 1
                        ? "dark:text-white border-gray-900 dark:border-gray-100 border-b-2 "
                        : "text-gray-500 border-transparen")
                    }
                    onClick={e => {
                      e.preventDefault();
                      setOpenTab(1);
                    }}
                    data-toggle="tab"
                    href="#link1"
                    role="tablist"
                  >Top News</li>
                  <li
                    className={
                      "pb-2 cursor-pointer text-xs font-bold uppercase  duration-150   block leading-normal " +
                      (openTab === 2
                        ? "dark:text-white border-gray-900 dark:border-gray-100 border-b-2 "
                        : "text-gray-500 border-transparen")
                    }
                    onClick={e => {
                      e.preventDefault();
                      setOpenTab(2);
                    }}
                    data-toggle="tab"
                    href="#link2"
                    role="tablist"
                  >Reviews</li>
                  <li
                    className={
                      "pb-2 cursor-pointer text-xs font-bold uppercase  duration-150   block leading-normal " +
                      (openTab === 3
                        ? "dark:text-white border-gray-900 dark:border-gray-100 border-b-2 "
                        : "text-gray-500 border-transparen")
                    }
                    onClick={e => {
                      e.preventDefault();
                      setOpenTab(3);
                    }}
                    data-toggle="tab"
                    href="#link2"
                    role="tablist"
                  >Stories</li>
                </ul>

              </div>
              <div className="px-4 py-2 flex-auto">
                <div className={openTab === 1 ? "block" : "hidden"} id="link1">
                  {posts.slice(1, 4).map((post, index) => {
                    //console.log(post)
                    var olddate = new Date(post['date']);
                    var today = format(olddate, "MMMM do, yyyy");

                    return (<Link key={index} href={`/blog${post['uri']}`}>
                      <div className="flex px-1 py-4">
                        <img
                          alt=""
                          className="flex-shrink-0 object-cover w-32 h-32 mr-4 dark:bg-coolGray-500"
                          src={post.featuredImage.node.sourceUrl}
                          loading="lazy"
                        />
                        <div className="flex flex-col flex-grow">
                          <a href="">
                            <span className=" bg-blue-700 text-white px-4 py-1 text-xs font-bold uppercase   top-6  dark:text-gray-100">
                              {post['categories']['nodes'][0]['name']}
                            </span>
                          </a>
                          <a
                            rel="noopener noreferrer"
                            href="#"
                            className="font-semibold my-2 text-sm md:text-xl hover:underline"
                            dangerouslySetInnerHTML={{ __html: post['title'] }}
                          >
                          </a>
                          <a
                            href=""
                            className=" pl-2 mx-2 my-2 text-gray-400 hover:text-red-500 duration-500"
                          >
                            Published on : {today}
                          </a>
                        </div>
                      </div>
                    </Link>)
                  })}

                  {/**/}
                </div>
              </div>
              <div className={openTab === 2 ? "block" : "hidden"} id="link2">
                <div className="flex flex-col divide-y divide-coolGray-700">
                  {reviews.slice(1, 4).map((post, index) => {
                    //console.log(post)
                    var olddate = new Date(post['date']);
                    var today = format(olddate, "MMMM do, yyyy");
                    return (<Link key={index} href={`/blog${post['uri']}`}>
                      <div className="flex px-1 py-4">
                        <img
                          alt=""
                          className="flex-shrink-0 object-cover w-32 h-32 mr-4 dark:bg-coolGray-500"
                          src={post.featuredImage.node.sourceUrl}
                          loading="lazy"
                        />
                        <div className="flex flex-col flex-grow">
                          <a href="">
                            <span className=" bg-blue-700 text-white px-4 py-1 text-xs font-bold uppercase   top-6  dark:text-gray-100">
                              {post['categories']['nodes'][0]['name']}
                            </span>
                          </a>
                          <a
                            rel="noopener noreferrer"
                            href="#"
                            className="font-semibold my-2 text-xl hover:underline"
                            dangerouslySetInnerHTML={{ __html: post['title'] }}
                          >
                          </a>
                          <a
                            href=""
                            className=" pl-2 mx-2 my-2 text-gray-400 hover:text-red-500 duration-500"
                          >
                            Published on : {today}
                          </a>
                        </div>
                      </div>
                    </Link>)
                  })}

                  {/**/}
                </div>
              </div>
              <div className={openTab === 3 ? "block" : "hidden"} id="link2">
                <div className="flex flex-col divide-y divide-coolGray-700">
                  {topstory.slice(1, 4).map((post, index) => {
                    //console.log(post)
                    var olddate = new Date(post['date']);
                    var today = format(olddate, "MMMM do, yyyy");
                    return (<Link key={index} href={`/blog${post['uri']}`}>
                      <div className="flex px-1 py-4">
                        <img
                          alt=""
                          className="flex-shrink-0 object-cover w-32 h-32 mr-4 dark:bg-coolGray-500"
                          src={post.featuredImage.node.sourceUrl}
                          loading="lazy"
                        />
                        <div className="flex flex-col flex-grow">
                          <a href="">
                            <span className=" bg-blue-700 text-white px-4 py-1 text-xs font-bold uppercase   top-6  dark:text-gray-100">
                              {post['categories']['nodes'][0]['name']}
                            </span>
                          </a>
                          <a
                            rel="noopener noreferrer"
                            href="#"
                            className="font-semibold my-2 text-xl hover:underline"
                            dangerouslySetInnerHTML={{ __html: post['title'] }}
                          >
                          </a>
                          <a
                            href=""
                            className=" pl-2 mx-2 my-2 text-gray-400 hover:text-red-500 duration-500"
                          >
                            Published on : {today}
                          </a>
                        </div>
                      </div>
                    </Link>)
                  })}

                  {/**/}
                </div>
              </div>
            </div>
          </div>
        </div>

      </section>

      {/* top stories */}
      <section className="px-2 sm:px-4 md:px-10 py-10 pt-5 sm:pt-10 md:pt-24 lg:pt-10  bg-gray-100 dark:bg-gray-800 dark:text-gray-100">
        <div className="container mx-auto dark:bg-gray-800 bg-gray-100 dark:text-gray-100">
          <div className="section-title  flex flex-wrap justify-between">
            <h2 className="font-bold text-black dark:text-gray-100 text-4xl">
              Top Stories
            </h2>
            <button
              type="button"
              className=" text-sm font-bold justify-end uppercase border-b-2 border-black dark:border-violet-400"
            >
              ALL TOP STORIES
            </button>
          </div>
          <div className="grid lg:grid-cols-3 py-10 lg:grid-rows-2 gap-6">
            {topstory.slice(0, 1).map((post, index) => {

              var olddate = new Date(post['date']);
              var today = format(olddate, "MMMM do, yyyy");
              return (<Link key={index} href={`/blog${post['uri']}`}>
                <div className="flex flex-col md:row-span-2  md:col-span-2 w-full mx-auto overflow-hidden rounded">
                  <div className='relative'>
		<img src={post.featuredImage.node.sourceUrl} alt="" className="w-full h-60 sm:h-full dark:bg-gray-500" />
    <span className=" bg-blue-700 absolute top-2  left-2 text-white px-4 py-1 text-xs font-bold uppercase     dark:text-gray-100">
                        {post['categories']['nodes'][0]['name']}
                      </span>
                  </div>
    
		<div className="p-6 pb-6 m-4 mx-auto -mt-16 space-y-2 lg:max-w-2xl sm:px-10 sm:mx-12 lg:rounded-md bg-gray-100 dark:bg-gray-900 drop-shadow-md">
      
			<div className="space-y-2">
				<a rel="noopener noreferrer" href="#" className="inline-block text-2xl font-semibold text-gray-900 dark:text-gray-100 sm:text-2xl">{post['title']}</a>
				<a
                    href=""
                    className=" pl-4 mx-2 text-gray-700 dark:text-gray-100   hover:text-red-500 duration-500"
                  >
                    By Ashley Graham
                  </a>
                  <span className="text-gray-700 dark:text-gray-100 mx-2">{today}</span>
                  <a
                    href=""
                    className="inline-flex text-gray-700 dark:text-gray-100 mx-2 hover:text-red-500 duration-500"
                  >
                    <svg
                      xmlns="http://www.w3.org/2000/svg"
                      className="h-4 w-4 mx-1 my-1"
                      viewBox="0 0 20 20"
                      stroke="currentColor"
                    >
                      <path
                        fill=""
                        d="M18.737,9.691h-5.462c-0.279,0-0.527,0.174-0.619,0.437l-1.444,4.104L8.984,3.195c-0.059-0.29-0.307-0.506-0.603-0.523C8.09,2.657,7.814,2.838,7.721,3.12L5.568,9.668H1.244c-0.36,0-0.655,0.291-0.655,0.655c0,0.36,0.294,0.655,0.655,0.655h4.8c0.281,0,0.532-0.182,0.621-0.45l1.526-4.645l2.207,10.938c0.059,0.289,0.304,0.502,0.595,0.524c0.016,0,0.031,0,0.046,0c0.276,0,0.524-0.174,0.619-0.437L13.738,11h4.999c0.363,0,0.655-0.294,0.655-0.655C19.392,9.982,19.1,9.691,18.737,9.691z"
                      />
                    </svg>
                    5k Views
                  </a>
                  <a
                    href=""
                    className="inline-flex text-gray-700 dark:text-gray-100 mx-2 hover:text-red-500 duration-500"
                  >
                    <svg
                      xmlns="http://www.w3.org/2000/svg"
                      className="h-4 w-4 mx-1 my-1"
                      fill="none"
                      viewBox="0 0 24 24"
                      stroke="currentColor"
                    >
                      <path
                        strokeLinecap="round"
                        strokeLinejoin="round"
                        strokeWidth={2}
                        d="M8.684 13.342C8.886 12.938 9 12.482 9 12c0-.482-.114-.938-.316-1.342m0 2.684a3 3 0 110-2.684m0 2.684l6.632 3.316m-6.632-6l6.632-3.316m0 0a3 3 0 105.367-2.684 3 3 0 00-5.367 2.684zm0 9.316a3 3 0 105.368 2.684 3 3 0 00-5.368-2.684z"
                      />
                    </svg>
                    230 Shares
                  </a>
			</div>
			
		</div>
	</div>
                {/* <div
                  className="relative  bg-center bg-no-repeat bg-cover md:row-span-2  md:col-span-2 w-full"
                  style={{ background: `url(${post.featuredImage.node.sourceUrl})`, backgroundRepeat: 'no-repeat', backgroundSize: 'cover' }}>
                  <a className="flex  flex-col mt-72  justify-end p-4 cursor-pointer  sm:p-8 group dark:via-transparent flex-grow-1 bg-gradient-to-b dark:from-coolGray-900 dark:to-coolGray-900">
                    <span className="flex items-center mb-4 space-x-2 dark:text-violet-400">

                      <span className=" bg-blue-700 absolute top-2  left-2 text-white px-4 py-1 text-xs font-bold uppercase     dark:text-gray-100">
                        {post['categories']['nodes'][0]['name']}
                      </span>
                    </span>
                    <div className="p-6 pb-12 m-4 mx-auto -mt-16 space-y-6 lg:max-w-2xl sm:px-10 sm:mx-12 lg:rounded-md dark:bg-gray-900">
                    <h1
                      rel="noopener noreferrer"
                      href="#"
                      className="relative lg:top-36 pl-2 text-gray-900   text-3xl   font-medium group-hover:underline underline-offset-8 dark:text-gray-100 hover:duration-700"
                      dangerouslySetInnerHTML={{ __html: post['title'] }}
                      >
                    </h1>
                    </div>
                    <span className="flex  space-x-10"></span>
                  </a>
                  <a
                    href=""
                    className=" pl-4 mx-2 text-gray-700 dark:text-gray-100   hover:text-red-500 duration-500"
                  >
                    By Ashley Graham
                  </a>
                  <span className="text-gray-700 dark:text-gray-100 mx-2">{today}</span>
                  <a
                    href=""
                    className="inline-flex text-gray-700 dark:text-gray-100 mx-2 hover:text-red-500 duration-500"
                  >
                    <svg
                      xmlns="http://www.w3.org/2000/svg"
                      className="h-4 w-4 mx-1 my-1"
                      viewBox="0 0 20 20"
                      stroke="currentColor"
                    >
                      <path
                        fill=""
                        d="M18.737,9.691h-5.462c-0.279,0-0.527,0.174-0.619,0.437l-1.444,4.104L8.984,3.195c-0.059-0.29-0.307-0.506-0.603-0.523C8.09,2.657,7.814,2.838,7.721,3.12L5.568,9.668H1.244c-0.36,0-0.655,0.291-0.655,0.655c0,0.36,0.294,0.655,0.655,0.655h4.8c0.281,0,0.532-0.182,0.621-0.45l1.526-4.645l2.207,10.938c0.059,0.289,0.304,0.502,0.595,0.524c0.016,0,0.031,0,0.046,0c0.276,0,0.524-0.174,0.619-0.437L13.738,11h4.999c0.363,0,0.655-0.294,0.655-0.655C19.392,9.982,19.1,9.691,18.737,9.691z"
                      />
                    </svg>
                    5k Views
                  </a>
                  <a
                    href=""
                    className="inline-flex text-gray-700 dark:text-gray-100 mx-2 hover:text-red-500 duration-500"
                  >
                    <svg
                      xmlns="http://www.w3.org/2000/svg"
                      className="h-4 w-4 mx-1 my-1"
                      fill="none"
                      viewBox="0 0 24 24"
                      stroke="currentColor"
                    >
                      <path
                        strokeLinecap="round"
                        strokeLinejoin="round"
                        strokeWidth={2}
                        d="M8.684 13.342C8.886 12.938 9 12.482 9 12c0-.482-.114-.938-.316-1.342m0 2.684a3 3 0 110-2.684m0 2.684l6.632 3.316m-6.632-6l6.632-3.316m0 0a3 3 0 105.367-2.684 3 3 0 00-5.367 2.684zm0 9.316a3 3 0 105.368 2.684 3 3 0 00-5.368-2.684z"
                      />
                    </svg>
                    230 Shares
                  </a>
                </div> */}
              </Link>)
            })}
            {topstory.slice(1, 3).map((post, index) => {

              var olddate = new Date(post['date']);
              var today = format(olddate, "MMMM do, yyyy");
              return (<Link key={index} href={`/blog${post['uri']}`}>
                <div
                  className="relative  bg-center bg-no-repeat bg-cover"
                  style={{ background: `url(${post.featuredImage.node.sourceUrl})`, backgroundRepeat: 'no-repeat', backgroundSize: 'cover' }}
                >
                  <a
                    href=""
                    className="flex flex-col  mt-24 justify-end p-4 cursor-pointer  sm:p-8 group dark:via-transparent flex-grow-1 bg-gradient-to-b dark:from-coolGray-900 dark:to-coolGray-900"
                  >
                    <span className="flex items-center  dark:text-violet-400">
                      <span className=" bg-purple-400 absolute top-2 left-2 hover:bg-purple-600 duration-700 text-white px-4 py-1  text-xs font-bold uppercase     dark:text-gray-100">
                        {post['categories']['nodes'][0]['name']}
                      </span>
                    </span>
                    <h1
                      rel="noopener noreferrer"
                      href="#"
                      className="relative lg:top-12 text-gray-900 text-lg my-2  font-medium group-hover:underline underline-offset-8 dark:text-gray-100 hover:duration-700"
                      dangerouslySetInnerHTML={{ __html: post['title'] }}
                    >
                    </h1>
                    <span className=" mx-2 py-3 relative lg:top-10 text-gray-900 dark:text-gray-100  hover:text-red-500 duration-500">
                      By Ashley Graham
                    </span>
                  </a>
                </div>
              </Link>)
            })}

          </div>
        </div>
      </section>
      <section className="px-2 sm:px-4  py-0 bg-gray-100 dark:bg-gray-800 dark:text-gray-100">
        <div className="container mx-auto">
          <div className="section-title flex flex-wrap justify-between">
            <h2 className="font-bold text-black text-4xl dark:text-gray-100">
              Trending Stories
            </h2>
            <button
              type="button"
              className=" text-sm font-bold justify-end uppercase border-b-2 border-black dark:border-violet-400"
            >
              ALL Trending Stories
            </button>
          </div>
          <div className="grid lg:grid-cols-2 py-10  gap-6">
            <div className="box">
              <div className="flex flex-col divide-y divide-coolGray-700">
                {trending.slice(0, 3).map((post, index) => {

                  var olddate = new Date(post['date']);
                  var today = format(olddate, "MMMM do, yyyy");
                  return (<Link key={index} href={`/blog${post['uri']}`}>
                    <div className="flex px-1 py-4">
                      <img
                        alt=""
                        className="flex-shrink-0 object-cover w-32 h-32 mr-4 dark:bg-coolGray-500"
                        src={post.featuredImage.node.sourceUrl}
                        loading="lazy"
                      />
                      <div className="flex flex-col flex-grow">
                        <a href="">
                          <span className=" bg-blue-700 text-white px-4 py-1 text-xs font-bold uppercase   top-6  dark:text-gray-100">
                            {post['categories']['nodes'][0]['name']}
                          </span>
                        </a>
                        <a
                          rel="noopener noreferrer"
                          href="#"
                          className="font-semibold my-2 text-xl hover:underline"
                          dangerouslySetInnerHTML={{ __html: post['title'] }}
                        >

                        </a>
                        <a
                          href=""
                          className=" pl-4 mx-2 my-2 text-gray-700  dark:text-gray-100 hover:text-red-500 duration-500"
                        >
                          {today}
                        </a>
                      </div>
                    </div>
                  </Link>)
                })}
                {/**/}
              </div>
            </div>
            <div className="box">
              <div className="flex flex-col divide-y divide-coolGray-700">
                {trending.slice(3, 6).map((post, index) => {

                  var olddate = new Date(post['date']);
                  var today = format(olddate, "MMMM do, yyyy");
                  return (<Link key={index} href={`/blog${post['uri']}`}>
                    <div className="flex px-1 py-4">
                      <img
                        alt=""
                        className="flex-shrink-0 object-cover w-32 h-32 mr-4 dark:bg-coolGray-500"
                        src={post.featuredImage.node.sourceUrl}
                        loading="lazy"
                      />
                      <div className="flex flex-col flex-grow">
                        <a href="">
                          <span className=" bg-blue-700 text-white px-4 py-1 text-xs font-bold uppercase   top-6  dark:text-gray-100">
                            {post['categories']['nodes'][0]['name']}
                          </span>
                        </a>
                        <a
                          rel="noopener noreferrer"
                          href="#"
                          className="font-semibold my-2 text-xl hover:underline"
                          dangerouslySetInnerHTML={{ __html: post['title'] }}
                        >

                        </a>
                        <a
                          href=""
                          className=" pl-4 mx-2 my-2 text-gray-700  dark:text-gray-100 hover:text-red-500 duration-500"
                        >
                          {today}
                        </a>
                      </div>
                    </div>
                  </Link>)
                })}
                {/**/}
              </div>
            </div>
          </div>
        </div>
      </section>


    </div>
  )
}
// change props
// export async function getStaticProps() {
// 	const topnews = await fetch('https://cohs.in/headless/wp-json/wp/v2/posts?&per_page=6&categories=3&_embed');
// 	const data = await topnews.json();
// 	const reviews = await fetch('https://cohs.in/headless/wp-json/wp/v2/posts?&per_page=6&categories=5&_embed');
// 	const reviewsdata = await reviews.json();
//     const topstory = await fetch('https://cohs.in/headless/wp-json/wp/v2/posts?&per_page=6&categories=6&_embed');
//     const topstorydata = await topstory.json();
//     const trending = await fetch('https://cohs.in/headless/wp-json/wp/v2/posts?&per_page=6&categories=9&_embed');
//     const trendingdata = await trending.json();


// 	return { props: { data , reviewsdata, topstorydata,trendingdata } }
// }

// export async function getStaticProps(){

//   // Paste your GraphQL query inside of a gql tagged template literal
//   const GET_POSTS = gql`
//   query testing {
//   posts (where: {categoryId: 5}) {
//     nodes {
//       title
//       content
//       date
//       uri
//       featuredImage {
//         node {
//           sourceUrl
//         }
//       }
//       categories {
//         nodes {
//           name
//           categoryId
//         }
//       }
//       excerpt(format: RENDERED)
//     }
//   }

// }
//   `;

//   // Here we make a call with the client and pass in our query string to the 
//   // configuration objects 'query' property
//   const response = await client.query({
//     query: GET_POSTS
//   });

//   // Once we get the response back, we need to traverse it to pull out the 
//   // data we want to pass into the HomePage
//   const posts = response?.data?.posts?.nodes; 




//   return {
//     props: {
//       posts
//     }
//   }
// }
 // getting data from graphql
export async function getServerSideProps() {
  const data = await client.query({
    query: gql`
    query topnews {
      posts (where: {categoryId: 3}) {
        nodes {
          title
          content
          date
          uri
          featuredImage {
            node {
              sourceUrl
            }
          }
          categories {
            nodes {
              name
              categoryId
            }
          }
          excerpt(format: RENDERED)
        }
      }
     
    }
    `,
  });
  const data1 = await client.query({
    query: gql`
    query reviews {
      posts (where: {categoryId: 5}) {
        nodes {
          title
          content
          date
          uri
          featuredImage {
            node {
              sourceUrl
            }
          }
          categories {
            nodes {
              name
              categoryId
            }
          }
          excerpt(format: RENDERED)
        }
      }
     
    }
    `,
  });
  const data2 = await client.query({
    query: gql`
    query topstory {
      posts (where: {categoryId: 6}) {
        nodes {
          title
          content
          date
          uri
          featuredImage {
            node {
              sourceUrl
            }
          }
          categories {
            nodes {
              name
              categoryId
            }
          }
          excerpt(format: RENDERED)
        }
      }
     
    }
    `,
  });
  const data3 = await client.query({
    query: gql`
    query trending {
      posts (where: {categoryId: 9}) {
        nodes {
          title
          content
          date
          uri
          featuredImage {
            node {
              sourceUrl
            }
          }
          categories {
            nodes {
              name
              categoryId
            }
          }
          excerpt(format: RENDERED)
        }
      }
     
    }
    `,
  });
  const posts = data?.data?.posts?.nodes;
  const reviews = data1?.data?.posts?.nodes;
  const topstory = data2?.data?.posts?.nodes;
  const trending = data3?.data?.posts?.nodes;




  return {
    props: {
      posts, reviews, topstory, trending
    },
  };
}